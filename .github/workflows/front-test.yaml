name: Front Build Test # Github Action 페이지 좌측 리스트에 표시될 이름
on:
  push:
    branches: [develop]
  pull_request:
    branches:
      - "*"

env:
  DOCKER_IMAGE: ghcr.io/heavyrisem/music2-front # ghcr에 업로드될 이미지 이름, format: ghcr.io/깃허브유저이름/이미지이름 test

jobs:
  node-build-test:
    name: Node Build Test
    runs-on: ubuntu-latest
    steps:
      # Checkout Repository
      - name: Check out source code
        uses: actions/checkout@v2.1.0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.X"

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Setup NPM Config
        run: |
          echo -e "\n//npm.pkg.github.com/:_authToken=${{ secrets.NPM_TOKEN }}" >> .npmrc

      - name: Install Dependencies
        run: pnpm install --frozen-lock

      - name: Build Node.js
        run: pnpm build --filter front

      - name: Check .next hash
        run: echo ${{ hashFiles('./apps/front/.next/**/*') }}

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: node-build-artifact-${{ github.ref_name }}
          path: ./apps/front/.next

  docker-build-test:
    name: Docker Build Test
    # runs-on: [self-hosted, build]
    runs-on: ubuntu-latest
    needs: node-build-test
    steps:
      # Checkout Repository
      - name: Check out source code
        uses: actions/checkout@v2.1.0

      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: node-build-artifact-${{ github.ref_name }}
          path: ./apps/front/.next

      - name: Check .next hash
        run: echo ${{ hashFiles('./apps/front/.next/**/*') }}

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: ./apps/front/.next

      # tonistiigi/binfmt 이미지를 이용해 qemu 설치
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # docker buildx 설치
      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      # Login to ghcr
      - name: Login to ghcr
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }} # Settings > Secrets > Actions 의 GHCR_PAT 값을 불러옴

      # Docker Build Test
      - name: Docker Build Test
        uses: docker/build-push-action@v3
        with:
          file: ./apps/front/Dockerfile
          context: .
          push: false # ghcr에 push
          tags: ${{ env.DOCKER_IMAGE }}:${{ github.ref_name }},${{ env.DOCKER_IMAGE }}:latest # 이미지 버전 [이미지 고유 아이디, latest]
          build-args: |
            NPM_TOKEN=${{ secrets.NPM_TOKEN }}
          platforms: linux/arm64
          cache-from: type=gha # 여기서 gha 는 Guthub Actions 용 캐시를 의미합니다.
          cache-to: type=gha,mode=max
